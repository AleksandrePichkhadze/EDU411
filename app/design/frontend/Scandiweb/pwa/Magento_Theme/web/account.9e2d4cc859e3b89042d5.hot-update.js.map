{"version":3,"sources":["webpack:////var/www/public/vendor/scandipwa/source/src/app/component/MyAccountCreateAccount/MyAccountCreateAccount.container.js"],"names":["MyAccountDispatcher","mapStateToProps","state","isLoading","MyAccountReducer","mapDispatchToProps","dispatch","createAccount","options","then","dispatcher","default","showNotification","type","message","MyAccountCreateAccountContainer","onCreateAccountSuccess","bind","onCreateAccountAttempt","_","invalidFields","props","setLoadingState","__","fields","onSignIn","setSignInState","password","email","firstname","lastname","is_subscribed","customerData","customer","code","STATE_CONFIRM_EMAIL","console","log","containerFunctions","Object","defineProperty","_MyAccountCreateAccountContainer","value","PropTypes","func","isRequired","bool","connect"],"mappings":"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","file":"account.9e2d4cc859e3b89042d5.hot-update.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { STATE_CONFIRM_EMAIL } from 'Component/MyAccountOverlay/MyAccountOverlay.config';\nimport { showNotification } from 'Store/Notification/Notification.action';\n\nimport MyAccountCreateAccount from './MyAccountCreateAccount.component';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Component/MyAccountCreateAccount/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({\n    isLoading: state.MyAccountReducer.isLoading\n});\n\n/** @namespace Component/MyAccountCreateAccount/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    createAccount: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.createAccount(options, dispatch)\n    ),\n    showNotification: (type, message) => dispatch(showNotification(type, message))\n});\n\n/** @namespace Component/MyAccountCreateAccount/Container */\nexport class MyAccountCreateAccountContainer extends PureComponent {\n    static propTypes = {\n        createAccount: PropTypes.func.isRequired,\n        onSignIn: PropTypes.func.isRequired,\n        setSignInState: PropTypes.func.isRequired,\n        setLoadingState: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool.isRequired\n    };\n\n    containerFunctions = {\n        onCreateAccountSuccess: this.onCreateAccountSuccess.bind(this),\n        onCreateAccountAttempt: this.onCreateAccountAttempt.bind(this)\n    };\n\n    onCreateAccountAttempt(_, invalidFields) {\n        const { showNotification, setLoadingState } = this.props;\n\n        if (invalidFields) {\n            showNotification('info', __('Incorrect data! Please resolve all field validation errors.'));\n        }\n\n        setLoadingState(!invalidFields);\n    }\n\n    async onCreateAccountSuccess(fields) {\n        const {\n            createAccount,\n            onSignIn,\n            setSignInState,\n            setLoadingState,\n            isLoading\n        } = this.props;\n\n        const {\n            password,\n            email,\n            firstname,\n            lastname,\n            is_subscribed\n        } = fields;\n\n        const customerData = {\n            customer: {\n                firstname,\n                lastname,\n                email,\n                is_subscribed\n            },\n            password\n        };\n\n        if (isLoading) {\n            return;\n        }\n\n        try {\n            const code = createAccount(customerData);\n            // if user needs confirmation\n            if (code === 2) {\n                setSignInState(STATE_CONFIRM_EMAIL);\n            } else {\n                onSignIn();\n            }\n        } finally {\n            setLoadingState(false);\n        }\n    }\n\n    render() {\n        console.log(this.props)\n        return (\n            <MyAccountCreateAccount\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountCreateAccountContainer);\n"],"sourceRoot":""}