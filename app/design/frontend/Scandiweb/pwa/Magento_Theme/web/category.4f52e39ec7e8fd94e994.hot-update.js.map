{"version":3,"sources":["webpack:////var/www/public/vendor/scandipwa/source/src/app/route/CategoryPage/CategoryPage.component.js","webpack:////var/www/public/vendor/scandipwa/source/src/app/route/CategoryPage/CategoryTypes/CategoryTypes.component.js"],"names":["CategoryPage","onFilterButtonClick","bind","toggleOverlayByKey","props","CATEGORY_FILTER_OVERLAY_ID","category","category_type","isContentFiltered","totalPages","__","filters","selectedFilters","isMatchingInfoFilter","sortFields","selectedSort","onSortChange","options","updatedSortFields","Object","values","map","id","value","label","sortDirection","sortKey","isVisibleOnMobile","isMatchingListFilter","device","isMobile","filter","search","renderItemsCount","cms_block","content","disabled","renderFilterOverlay","renderCategoryDetails","renderCategoryType","renderCmsBlock","renderCategorySort","renderFilterButton","renderCategoryProductList","block","elem","renderContent","defineProperty","_CategoryPage","CategoryTreeType","isRequired","PropTypes","objectOf","shape","array","oneOf","string","func","FilterType","FilterInputType","bool","number","DeviceType","CategoryTypes","height","backgroundColor","_CategoryTypes"],"mappings":"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","file":"category.4f52e39ec7e8fd94e994.hot-update.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport CategoryDetails from 'Component/CategoryDetails'\nimport CategoryTypes from './CategoryTypes/CategoryTypes.component'\nimport CategoryFilterOverlay from 'Component/CategoryFilterOverlay';\nimport { CATEGORY_FILTER_OVERLAY_ID } from 'Component/CategoryFilterOverlay/CategoryFilterOverlay.config';\nimport CategoryItemsCount from 'Component/CategoryItemsCount';\nimport CategoryProductList from 'Component/CategoryProductList';\nimport CategorySort from 'Component/CategorySort';\nimport ContentWrapper from 'Component/ContentWrapper';\nimport Html from 'Component/Html';\nimport { CategoryTreeType } from 'Type/Category';\nimport { DeviceType } from 'Type/Device';\nimport { FilterInputType, FilterType } from 'Type/ProductList';\n\nimport './CategoryPage.style';\nimport './CategoryPage.style.scss';\n\n/** @namespace Route/CategoryPage/Component */\nexport class CategoryPage extends PureComponent {\n    static propTypes = {\n        category: CategoryTreeType.isRequired,\n        filters: PropTypes.objectOf(PropTypes.shape).isRequired,\n        sortFields: PropTypes.shape({\n            options: PropTypes.array\n        }).isRequired,\n        selectedSort: PropTypes.shape({\n            sortDirection: PropTypes.oneOf([\n                'ASC',\n                'DESC'\n            ]),\n            sortKey: PropTypes.string\n        }).isRequired,\n        onSortChange: PropTypes.func.isRequired,\n        toggleOverlayByKey: PropTypes.func.isRequired,\n        selectedFilters: FilterType.isRequired,\n        filter: FilterInputType.isRequired,\n        search: PropTypes.string,\n        isContentFiltered: PropTypes.bool,\n        isMatchingListFilter: PropTypes.bool,\n        isMatchingInfoFilter: PropTypes.bool,\n        totalPages: PropTypes.number,\n        device: DeviceType.isRequired\n    };\n\n    static defaultProps = {\n        isContentFiltered: true,\n        isMatchingListFilter: false,\n        isMatchingInfoFilter: false,\n        totalPages: 1,\n        search: ''\n    };\n\n    onFilterButtonClick = this.onFilterButtonClick.bind(this);\n\n    onFilterButtonClick() {\n        const { toggleOverlayByKey } = this.props;\n        toggleOverlayByKey(CATEGORY_FILTER_OVERLAY_ID);\n    }\n\n    renderCategoryDetails() {\n        const { category } = this.props;\n\n        return (\n            <CategoryDetails\n              category={ category }\n            />\n        );\n    }\n    renderCategoryType(){\n        const {category} = this.props;\n        if(!category.category_type){\n            return null;\n        }\n        return(\n            <CategoryTypes\n            category = {category}\n            />\n        )\n    }\n\n    renderFilterButton() {\n        const { isContentFiltered, totalPages } = this.props;\n\n        if (!isContentFiltered && totalPages === 0) {\n            return null;\n        }\n\n        return (\n            <button\n              block=\"CategoryPage\"\n              elem=\"Filter\"\n              onClick={ this.onFilterButtonClick }\n            >\n                { __('Filter') }\n            </button>\n        );\n    }\n\n    renderFilterOverlay() {\n        const {\n            filters,\n            selectedFilters,\n            isMatchingInfoFilter\n        } = this.props;\n\n        return (\n            <CategoryFilterOverlay\n              availableFilters={ filters }\n              customFiltersValues={ selectedFilters }\n              isMatchingInfoFilter={ isMatchingInfoFilter }\n            />\n        );\n    }\n\n    renderCategorySort() {\n        const {\n            sortFields,\n            selectedSort,\n            onSortChange,\n            isMatchingInfoFilter\n        } = this.props;\n\n        const { options = {} } = sortFields;\n        const updatedSortFields = Object.values(options).map(({ value: id, label }) => ({ id, label }));\n        const { sortDirection, sortKey } = selectedSort;\n\n        return (\n            <CategorySort\n              isMatchingInfoFilter={ isMatchingInfoFilter }\n              onSortChange={ onSortChange }\n              sortFields={ updatedSortFields }\n              sortKey={ sortKey }\n              sortDirection={ sortDirection }\n            />\n        );\n    }\n\n    renderItemsCount(isVisibleOnMobile = false) {\n        const { isMatchingListFilter, device } = this.props;\n\n        if (isVisibleOnMobile && !device.isMobile) {\n            return null;\n        }\n\n        if (!isVisibleOnMobile && device.isMobile) {\n            return null;\n        }\n\n        return (\n            <CategoryItemsCount\n              isMatchingListFilter={ isMatchingListFilter }\n            />\n        );\n    }\n\n    renderCategoryProductList() {\n        const {\n            filter,\n            search,\n            selectedSort,\n            selectedFilters,\n            isMatchingListFilter,\n            isMatchingInfoFilter\n        } = this.props;\n\n        return (\n            <div block=\"CategoryPage\" elem=\"ProductListWrapper\">\n                { this.renderItemsCount(true) }\n                <CategoryProductList\n                  filter={ filter }\n                  search={ search }\n                  sort={ selectedSort }\n                  selectedFilters={ selectedFilters }\n                  isMatchingListFilter={ isMatchingListFilter }\n                  isMatchingInfoFilter={ isMatchingInfoFilter }\n                />\n            </div>\n        );\n    }\n\n    renderCmsBlock() {\n        const { category: { cms_block } } = this.props;\n\n        if (!cms_block) {\n            return null;\n        }\n\n        const { content, disabled } = cms_block;\n\n        if (disabled) {\n            return null;\n        }\n\n        return (\n            <div\n              block=\"CategoryPage\"\n              elem=\"CMS\"\n            >\n                <Html content={ content } />\n            </div>\n        );\n    }\n\n    renderContent() {\n        return (\n            <>\n                { this.renderFilterOverlay() }\n                { this.renderCategoryDetails() }\n                { this.renderCategoryType() }\n                { this.renderCmsBlock() }\n                <aside block=\"CategoryPage\" elem=\"Miscellaneous\">\n                    { this.renderItemsCount() }\n                    { this.renderCategorySort() }\n                    { this.renderFilterButton() }\n                </aside>\n                { this.renderCategoryProductList() }\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <main block=\"CategoryPage\">\n                <ContentWrapper\n                  wrapperMix={ {\n                      block: 'CategoryPage',\n                      elem: 'Wrapper'\n                  } }\n                  label=\"Category page\"\n                >\n                    { this.renderContent() }\n                </ContentWrapper>\n            </main>\n        );\n    }\n}\n\nexport default CategoryPage;\n","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { PureComponent } from 'react';\nimport { CategoryTreeType } from 'Type/Category';\n\n/**\n * Category types\n * @class CategoryTypes\n * @namespace Component/CategoryTypes/Component\n */\nexport class CategoryTypes extends PureComponent {\n    static propTypes = {\n        category: CategoryTreeType.isRequired\n    };\n    renderCategoryType(){\n        const {category: {category_type}} = this.props\n        return(\n            <div>{category_type}</div>\n        )\n    }\n\n    render(){\n        return(\n            <div style={{height: \"41px\", backgroundColor: \"red\"}}>{ this.renderCategoryType() }</div>\n        )\n\n    }\n}\n\nexport default CategoryTypes;"],"sourceRoot":""}